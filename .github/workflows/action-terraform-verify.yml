name: Validate Terraform
on:
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  validate_fmt:
    runs-on: ubuntu-latest
    name: Terraform fmt check
    outputs:
      CHECK_STATUS: "${{ env.CHECK_STATUS }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Fetch changed files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
      - name: Validate terraform fmt (added_modified)
        run: |
          set +e

          echo "CHECK_STATUS=0" >> $GITHUB_ENV

          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            echo "Checking terraform fmt on ${changed_file}..."

            if [[ $changed_file == *.tf ]]; then
              terraform fmt -check $changed_file
              FMT_STATUS=$(echo $?)

              if [[ $FMT_STATUS -ne 0 ]]; then
                echo "❌ terraform fmt failed - ${changed_file}" >> $GITHUB_STEP_SUMMARY
                echo "CHECK_STATUS=1" >> $GITHUB_ENV
              fi
            fi
          done
      - name: Process check
        if: always()
        run: exit $CHECK_STATUS

  validate_terraform:
    runs-on: ubuntu-latest
    name: Terraform validation
    needs: validate_fmt
    steps:
      - uses: actions/checkout@v3
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
      - name: Terraform init
        run: terraform init -backend=false
        working-directory: ./infrastructure
      - name: Terraform validate
        run: terraform validate
        working-directory: ./infrastructure
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: latest
      - name: Init TFLint
        run: tflint --init
        working-directory: ./infrastructure
      - name: Run TFLint
        run: tflint
        working-directory: ./infrastructure
